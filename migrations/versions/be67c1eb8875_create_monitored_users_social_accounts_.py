"""Create monitored_users social_accounts and posts table

Revision ID: be67c1eb8875
Revises: e593dabd54d7
Create Date: 2023-05-25 20:58:49.267046

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'be67c1eb8875'
down_revision = 'e593dabd54d7'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('monitored_users',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('social_accounts',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('social_account_id', sa.String(), nullable=False),
    sa.Column('profile_pic_url', sa.String(), nullable=True),
    sa.Column('type', sa.Boolean(), nullable=False),
    sa.Column('last_scanned', sa.DateTime(), nullable=False),
    sa.Column('monitored_user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.ForeignKeyConstraint(['monitored_user_id'], ['monitored_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('posts',
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('probability', sa.Float(), nullable=False),
    sa.Column('social_account_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.ForeignKeyConstraint(['social_account_id'], ['social_accounts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_unique_constraint(None, 'social_auths', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'social_auths', type_='unique')
    op.drop_table('posts')
    op.drop_table('social_accounts')
    op.drop_table('monitored_users')
    # ### end Alembic commands ###
